---
import "@fontsource-variable/merriweather";
import "@fontsource-variable/raleway";
import "../styles/global.css";

import { GoogleAnalytics } from "@astrolib/analytics";
import { SEO } from "astro-seo";
import Header from "@/components/layout/Header.astro";
import Footer from "@/components/layout/Footer.astro";

export interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title} | Niklas Dahlqvist's Portfolio</title>
    <SEO title={title} description={description} />
    <GoogleAnalytics id="G-L1JLG7M0LF" />
  </head>
  <body class="font-sans grid grid-rows-[auto_1fr_auto] min-h-screen">
    <Header />
    <main id="site-content">
      <slot />
    </main>
    <Footer />
  </body>
</html>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, { attributes: true, attributeFilter: ["class"] });
  }
</script>
